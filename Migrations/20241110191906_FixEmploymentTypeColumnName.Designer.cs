// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TopCV.Models;

#nullable disable

namespace TopCV.Migrations
{
    [DbContext(typeof(TopcvContext))]
    [Migration("20241110191906_FixEmploymentTypeColumnName")]
    partial class FixEmploymentTypeColumnName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("TopCV.Models.Adminuser", b =>
                {
                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserName")
                        .HasName("PRIMARY");

                    b.ToTable("adminusers", (string)null);
                });

            modelBuilder.Entity("TopCV.Models.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("ApplicationDate")
                        .HasColumnType("date");

                    b.Property<string>("Cvfile")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CVFile");

                    b.Property<int?>("IDJobPost")
                        .HasColumnType("int")
                        .HasColumnName("IDJobPost");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserJobseeker")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IDJobPost" }, "IDJobPost");

                    b.HasIndex(new[] { "Status" }, "Status");

                    b.HasIndex(new[] { "UserJobseeker" }, "UserJobseeker");

                    b.ToTable("application", (string)null);
                });

            modelBuilder.Entity("TopCV.Models.Applicationstatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("applicationstatus", (string)null);
                });

            modelBuilder.Entity("TopCV.Models.Employmenttype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmploymentTypeName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("employmenttype", (string)null);
                });

            modelBuilder.Entity("TopCV.Models.Jobfield", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("JobField")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("JobField");

                    b.HasKey("ID")
                        .HasName("PRIMARY");

                    b.ToTable("jobfield", (string)null);
                });

            modelBuilder.Entity("TopCV.Models.Jobpost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("JobDescription")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateOnly?>("PostDate")
                        .HasColumnType("date");

                    b.Property<string>("Requirements")
                        .HasColumnType("text");

                    b.Property<string>("SalaryRange")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UserEmployer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Status" }, "Status")
                        .HasDatabaseName("Status1");

                    b.HasIndex(new[] { "UserEmployer" }, "UserEmploy_idx");

                    b.ToTable("jobpost", (string)null);
                });

            modelBuilder.Entity("TopCV.Models.Jobpostemployment", b =>
                {
                    b.Property<int>("IDEmploymentType")
                        .HasColumnType("int")
                        .HasColumnName("IDEmploymentType");

                    b.Property<int>("IDJobPost")
                        .HasColumnType("int")
                        .HasColumnName("IDJobPost");

                    b.Property<int?>("IDEmploymentType")
                        .HasColumnType("int");

                    b.HasKey("IDEmploymentType", "IDJobPost")
                        .HasName("PRIMARY");

                    b.HasIndex("IDEmploymentType");

                    b.HasIndex(new[] { "IDEmploymentType" }, "Employment_idx");

                    b.HasIndex(new[] { "IDJobPost" }, "JobPost_idx");

                    b.ToTable("jobpostemployment", (string)null);
                });

            modelBuilder.Entity("TopCV.Models.Jobpostfield", b =>
                {
                    b.Property<int>("IDJobPost")
                        .HasColumnType("int")
                        .HasColumnName("IDJobPost");

                    b.Property<int>("IDJobField")
                        .HasColumnType("int")
                        .HasColumnName("IDJobField");

                    b.HasKey("IDJobPost", "IDJobField");

                    b.HasIndex("IDJobField");

                    b.ToTable("jobpostfield", (string)null);
                });

            modelBuilder.Entity("TopCV.Models.Jobpoststatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("jobpoststatus", (string)null);
                });

            modelBuilder.Entity("TopCV.Models.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserName")
                        .HasName("PRIMARY");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("TopCV.Models.Useremployer", b =>
                {
                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CompanyInfo")
                        .HasColumnType("text");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("UserName")
                        .HasName("PRIMARY");

                    b.ToTable("useremployer", (string)null);
                });

            modelBuilder.Entity("TopCV.Models.Userjobseeker", b =>
                {
                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("EducationLevel")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ExperienceYears")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Skills")
                        .HasColumnType("text");

                    b.HasKey("UserName")
                        .HasName("PRIMARY");

                    b.ToTable("userjobseeker", (string)null);
                });

            modelBuilder.Entity("TopCV.Models.Adminuser", b =>
                {
                    b.HasOne("TopCV.Models.User", "UserNameNavigation")
                        .WithOne("Adminuser")
                        .HasForeignKey("TopCV.Models.Adminuser", "UserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("admin");

                    b.Navigation("UserNameNavigation");
                });

            modelBuilder.Entity("TopCV.Models.Application", b =>
                {
                    b.HasOne("TopCV.Models.Jobpost", "JobPost")
                        .WithMany("Applications")
                        .HasForeignKey("IDJobPost")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("application_ibfk_1");

                    b.HasOne("TopCV.Models.Applicationstatus", "StatusNavigation")
                        .WithMany("Applications")
                        .HasForeignKey("Status")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("application_ibfk_3");

                    b.HasOne("TopCV.Models.Userjobseeker", "UserJobseekerNavigation")
                        .WithMany("Applications")
                        .HasForeignKey("UserJobseeker")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("application_ibfk_2");

                    b.Navigation("JobPost");

                    b.Navigation("StatusNavigation");

                    b.Navigation("UserJobseekerNavigation");
                });

            modelBuilder.Entity("TopCV.Models.Jobpost", b =>
                {
                    b.HasOne("TopCV.Models.Jobpoststatus", "StatusNavigation")
                        .WithMany("Jobposts")
                        .HasForeignKey("Status")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("jobpost_ibfk_1");

                    b.HasOne("TopCV.Models.Useremployer", "UserEmployerNavigation")
                        .WithMany("Jobposts")
                        .HasForeignKey("UserEmployer")
                        .IsRequired()
                        .HasConstraintName("UserEmploy");

                    b.Navigation("StatusNavigation");

                    b.Navigation("UserEmployerNavigation");
                });

            modelBuilder.Entity("TopCV.Models.Jobpostemployment", b =>
                {
                    b.HasOne("TopCV.Models.Employmenttype", null)
                        .WithMany("Jobpostemployments")
                        .HasForeignKey("IDEmploymentType");

                    b.HasOne("TopCV.Models.Employmenttype", "EmploymentType")
                        .WithMany()
                        .HasForeignKey("IDEmploymentType")
                        .IsRequired()
                        .HasConstraintName("employment");

                    b.HasOne("TopCV.Models.Jobpost", "JobPost")
                        .WithMany("JobpostEmployments")
                        .HasForeignKey("IDJobPost")
                        .IsRequired()
                        .HasConstraintName("JobPost");

                    b.Navigation("EmploymentType");

                    b.Navigation("JobPost");
                });

            modelBuilder.Entity("TopCV.Models.Jobpostfield", b =>
                {
                    b.HasOne("TopCV.Models.Jobpost", "JobPost")
                        .WithMany("Jobpostfields")
                        .HasForeignKey("IDJobPost")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TopCV.Models.Jobfield", "JobField")
                        .WithMany("Jobpostfields")
                        .HasForeignKey("IDJobField")
                        .IsRequired()
                        .HasConstraintName("FK_Jobfield_Jobpostfield");

                    b.Navigation("JobField");

                    b.Navigation("JobPost");
                });

            modelBuilder.Entity("TopCV.Models.Useremployer", b =>
                {
                    b.HasOne("TopCV.Models.User", "UserNameNavigation")
                        .WithOne("Useremployer")
                        .HasForeignKey("TopCV.Models.Useremployer", "UserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("useremployer_ibfk_1");

                    b.Navigation("UserNameNavigation");
                });

            modelBuilder.Entity("TopCV.Models.Userjobseeker", b =>
                {
                    b.HasOne("TopCV.Models.User", "UserNameNavigation")
                        .WithOne("Userjobseeker")
                        .HasForeignKey("TopCV.Models.Userjobseeker", "UserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("userjobseeker_ibfk_1");

                    b.Navigation("UserNameNavigation");
                });

            modelBuilder.Entity("TopCV.Models.Applicationstatus", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("TopCV.Models.Employmenttype", b =>
                {
                    b.Navigation("Jobpostemployments");
                });

            modelBuilder.Entity("TopCV.Models.Jobfield", b =>
                {
                    b.Navigation("Jobpostfields");
                });

            modelBuilder.Entity("TopCV.Models.Jobpost", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("JobpostEmployments");

                    b.Navigation("Jobpostfields");
                });

            modelBuilder.Entity("TopCV.Models.Jobpoststatus", b =>
                {
                    b.Navigation("Jobposts");
                });

            modelBuilder.Entity("TopCV.Models.User", b =>
                {
                    b.Navigation("Adminuser");

                    b.Navigation("Useremployer");

                    b.Navigation("Userjobseeker");
                });

            modelBuilder.Entity("TopCV.Models.Useremployer", b =>
                {
                    b.Navigation("Jobposts");
                });

            modelBuilder.Entity("TopCV.Models.Userjobseeker", b =>
                {
                    b.Navigation("Applications");
                });
#pragma warning restore 612, 618
        }
    }
}
